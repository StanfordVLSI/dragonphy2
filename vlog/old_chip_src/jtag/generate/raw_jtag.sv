//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11879 $ --- $Date: 2013/06/11 $   |
//	-----------------------------------------------
//	
//
//  Source file: /sim/zamyers/JusTAG/rtl/digital/raw_jtag.svp
//  Source template: raw_jtag
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

/* *****************************************************************************
 * File: template.vp
 * Author: Ofer Shacham
 * 
 * Description:
 * This module is the top of the actual design.
 * 
 * REQUIRED GENESIS PARAMETERS:
 * ----------------------------
 * * IOList -  List of main design IOs. For each IO you must specify:
 *   * name
 *   * width
 *   * direction - allowed directions are 'in'/'out'
 *   * bsr - put IO on boundary scan? (yes/no)
 *   * pad - pad type (analog or anl/digital or dig)
 *   * orientation - Orientation of the IO pad. allowed values are {left, right, 
 *		     top, bottom}
 * 
 * SYSCLK_CFG_BUS_WIDTH (48) -  Bus width for system clocked configuration entities
 * SYSCLK_CFG_ADDR_WIDTH (18) - Address width for system clocked configuration entities
 * TESTCLK_CFG_BUS_WIDTH (32) - Bus width for test clocked configuration entities
 * TESTCLK_CFG_ADDR_WIDTH (12) - Address width for test clocked configuration entities
 * 
 * ds
 * Inputs:
 * -------
 * Main design inputs, plus  
 * inputs that regard the boundary scan and pads control
 * 
 * Outputs:
 * --------
 * Main design outputs, plus 
 * outputs that regard the boundary scan and pads control
 * 
 * Change bar:
 * -----------
 * Date          Author   Description
 * Mar 28, 2010  shacham  init version  --  
 * May 18, 2010  shacham  Added orientation feild to IO parameter list
 * May 24, 2010  shacham  Pulled config bus parameters to top level
 *			  Added cfg_ifc as the proper way to implement config
 *			  bus uniformity amongst modules.
 *			  Made declaration of IO params into a force_param to
 *			  make it immutable
 * ****************************************************************************/
// ACTUAL GENESIS2 PARAMETERIZATIONS
// IOList (_GENESIS2_IMMUTABLE_PRIORITY_) = 
//	[ { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_v2t, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>16, bsr=>yes, direction=>out, name=>en_slice, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>5, bsr=>yes, direction=>out, name=>ctl_v2tn, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>5, bsr=>yes, direction=>out, name=>ctl_v2tp, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>2, bsr=>yes, direction=>out, name=>init, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>16, bsr=>yes, direction=>out, name=>ALWS_ON, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>2, bsr=>yes, direction=>out, name=>sel_pm_sign, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>2, bsr=>yes, direction=>out, name=>sel_pm_in, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>16, bsr=>yes, direction=>out, name=>sel_clk_TDC, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>16, bsr=>yes, direction=>out, name=>en_pm, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>16, bsr=>yes, direction=>out, name=>en_v2t_clk_next, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>16, bsr=>yes, direction=>out, name=>en_sw_test, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>2, bsr=>yes, direction=>out, name=>ctl_dcdl_late, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>2, bsr=>yes, direction=>out, name=>ctl_dcdl_early, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>5, bsr=>yes, direction=>out, name=>ctl_dcdl_TDC, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_gf, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>en_arb_pi, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>en_delay_pi, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>en_ext_Qperi, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>en_pm_pi, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>en_cal_pi, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>5, bsr=>yes, direction=>out, name=>ext_Qperi, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>2, bsr=>yes, direction=>out, name=>sel_pm_sign_pi, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>32, bsr=>yes, direction=>out, name=>del_inc, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>2, bsr=>yes, direction=>out, name=>ctl_dcdl_slice, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>2, bsr=>yes, direction=>out, name=>ctl_dcdl_sw, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>disable_state, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>en_clk_sw, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>en_meas_pi, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>sel_meas_pi, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>2, bsr=>yes, direction=>out, name=>en_slice_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>5, bsr=>yes, direction=>out, name=>ctl_v2tn_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>5, bsr=>yes, direction=>out, name=>ctl_v2tp_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>2, bsr=>yes, direction=>out, name=>init_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>2, bsr=>yes, direction=>out, name=>ALWS_ON_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>2, bsr=>yes, direction=>out, name=>sel_pm_sign_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>2, bsr=>yes, direction=>out, name=>sel_pm_in_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>2, bsr=>yes, direction=>out, name=>sel_clk_TDC_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>2, bsr=>yes, direction=>out, name=>en_pm_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>2, bsr=>yes, direction=>out, name=>en_v2t_clk_next_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>2, bsr=>yes, direction=>out, name=>en_sw_test_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>2, bsr=>yes, direction=>out, name=>ctl_dcdl_late_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>2, bsr=>yes, direction=>out, name=>ctl_dcdl_early_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>5, bsr=>yes, direction=>out, name=>ctl_dcdl_TDC_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>sel_pfd_in, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>sel_pfd_in_meas, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_pfd_inp_meas, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_pfd_inn_meas, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>sel_del_out, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>disable_ibuf_async, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>disable_ibuf_aux, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>disable_ibuf_test0, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>disable_ibuf_test1, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_inbuf, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>sel_inbuf_in, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>bypass_inbuf_div, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>3, bsr=>yes, direction=>out, name=>inbuf_ndiv, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_inbuf_meas, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>en_biasgen, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>4, bsr=>yes, direction=>out, name=>ctl_biasgen, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>sel_del_out_pi, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_del_out_pi, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>20, bsr=>yes, direction=>in, name=>pm_out, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>20, bsr=>yes, direction=>in, name=>pm_out_pi, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>in, name=>cal_out_pi, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>5, bsr=>yes, direction=>in, name=>Qperi, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>5, bsr=>yes, direction=>in, name=>max_sel_mux, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>20, bsr=>yes, direction=>in, name=>pm_out_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>8, bsr=>yes, direction=>out, name=>pd_offset_ext, orientation=>top, signed=>1 },
//	  { array=>1, bitwidth=>22, bsr=>yes, direction=>out, name=>i_val, orientation=>top, signed=>1 },
//	  { array=>1, bitwidth=>22, bsr=>yes, direction=>out, name=>p_val, orientation=>top, signed=>1 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_ext_pi_ctl_cdr, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>9, bsr=>yes, direction=>out, name=>ext_pi_ctl_cdr, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>9, bsr=>yes, direction=>out, name=>ext_pi_ctl_offset, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_ext_pfd_offset, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>8, bsr=>yes, direction=>out, name=>ext_pfd_offset, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_ext_pfd_offset_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>8, bsr=>yes, direction=>out, name=>ext_pfd_offset_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_ext_max_sel_mux, orientation=>top, signed=>0 },
//	  { array=>4, bitwidth=>5, bsr=>yes, direction=>out, name=>ext_max_sel_mux, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_pfd_cal, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_pfd_cal_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>Navg_adc, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>Nbin_adc, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>DZ_hist_adc, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>Navg_adc_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>Nbin_adc_rep, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>DZ_hist_adc_rep, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>8, bsr=>yes, direction=>in, name=>adcout_avg, orientation=>top, signed=>1 },
//	  { array=>16, bitwidth=>24, bsr=>yes, direction=>in, name=>adcout_sum, orientation=>top, signed=>1 },
//	  { array=>16, bitwidth=>16, bsr=>yes, direction=>in, name=>adcout_hist_center, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>16, bsr=>yes, direction=>in, name=>adcout_hist_side, orientation=>top, signed=>0 },
//	  { array=>16, bitwidth=>8, bsr=>yes, direction=>in, name=>pfd_offset, orientation=>top, signed=>1 },
//	  { array=>2, bitwidth=>8, bsr=>yes, direction=>in, name=>adcout_avg_rep, orientation=>top, signed=>1 },
//	  { array=>2, bitwidth=>24, bsr=>yes, direction=>in, name=>adcout_sum_rep, orientation=>top, signed=>1 },
//	  { array=>2, bitwidth=>16, bsr=>yes, direction=>in, name=>adcout_hist_center_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>16, bsr=>yes, direction=>in, name=>adcout_hist_side_rep, orientation=>top, signed=>0 },
//	  { array=>2, bitwidth=>8, bsr=>yes, direction=>in, name=>pfd_offset_rep, orientation=>top, signed=>1 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>Ndiv_clk_avg, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>Ndiv_clk_cdr, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>int_rstb, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>sram_rstb, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>cdr_rstb, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>sel_outbuff, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>4, bsr=>yes, direction=>out, name=>sel_trigbuff, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_outbuff, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>en_trigbuff, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>3, bsr=>yes, direction=>out, name=>Ndiv_outbuff, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>3, bsr=>yes, direction=>out, name=>Ndiv_trigbuff, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>bypass_out, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>1, bsr=>yes, direction=>out, name=>bypass_trig, orientation=>top, signed=>0 },
//	  { array=>1, bitwidth=>10, bsr=>yes, direction=>out, name=>in_addr, orientation=>top, signed=>0 },
//	  { array=>18, bitwidth=>8, bsr=>yes, direction=>in, name=>out_data, orientation=>top, signed=>1 },
//	  { array=>1, bitwidth=>10, bsr=>yes, direction=>in, name=>addr, orientation=>top, signed=>0 },
//	  { bitwidth=>1, bsr=>no, direction=>in, name=>tck, orientation=>right, pad=>digital },
//	  { bitwidth=>1, bsr=>no, direction=>in, name=>trst_n, orientation=>right, pad=>digital },
//	  { bitwidth=>1, bsr=>no, direction=>in, name=>tms, orientation=>right, pad=>digital },
//	  { bitwidth=>1, bsr=>no, direction=>in, name=>tdi, orientation=>right, pad=>digital },
//	  { bitwidth=>1, bsr=>no, direction=>out, name=>tdo, orientation=>right, pad=>digital },
//	  { bitwidth=>1, bsr=>no, direction=>out, name=>tdo_en, orientation=>right, pad=>digital }
//	]
//
// IfcPtr (_GENESIS2_IMMUTABLE_PRIORITY_) = 
//	InstancePath:raw_jtag.ifc (raw_jtag_ifc_unq1)
//
// SYSCLK_CFG_BUS_WIDTH (_GENESIS2_DECLARATION_PRIORITY_) = 32
//
// SYSCLK_CFG_ADDR_WIDTH (_GENESIS2_DECLARATION_PRIORITY_) = 14
//

// TESTCLK_CFG_BUS_WIDTH (_GENESIS2_DECLARATION_PRIORITY_) = 32
//
// TESTCLK_CFG_ADDR_WIDTH (_GENESIS2_DECLARATION_PRIORITY_) = 14
//


module raw_jtag
  (
   // main IOs
   raw_jtag_ifc_unq1.des ifc,

   // Signals for the Boundary Scan Register (these are not chip IOs though)
   output wire logic bsr_tdi,
   output wire logic bsr_sample,
   output wire logic	bsr_intest,
   output wire logic bsr_extest,
   output wire logic bsr_update_en,
   output wire logic bsr_capture_en,
   output wire logic bsr_shift_dr,
   input wire logic	bsr_tdo
   );

   //  Config interfaces for system and test clock domains

cfg_ifc_unq1  sc_jtag2rf0_ifc();
cfg_ifc_unq1  sc_rf02rf1_ifc();
cfg_ifc_unq1  sc_rf12rf2_ifc();
cfg_ifc_unq1  sc_rf22rf3_ifc();
cfg_ifc_unq1  sc_rf32rf4_ifc();
cfg_ifc_unq1  sc_rf42rf5_ifc();
cfg_ifc_unq1  sc_rf52rf6_ifc();
cfg_ifc_unq1  sc_rf62rf7_ifc();
cfg_ifc_unq1  sc_rf72rf8_ifc();
cfg_ifc_unq1  sc_rf82rf9_ifc();
cfg_ifc_unq1  sc_rf92rf10_ifc();
cfg_ifc_unq1  sc_rf102rf11_ifc();
cfg_ifc_unq1  sc_rf112rf12_ifc();
cfg_ifc_unq1  sc_rf122rf13_ifc();
cfg_ifc_unq1  sc_rf132rf14_ifc();
cfg_ifc_unq1  sc_rf142rf15_ifc();
cfg_ifc_unq1  sc_rf162jtag_ifc();
cfg_ifc_unq1  sc_rf152rf16_ifc();


cfg_ifc_unq1  tc_jtag2rf0_ifc();
cfg_ifc_unq1  tc_rf02rf1_ifc();
cfg_ifc_unq1  tc_rf12rf2_ifc();
cfg_ifc_unq1  tc_rf22rf3_ifc();
cfg_ifc_unq1  tc_rf32rf4_ifc();
cfg_ifc_unq1  tc_rf42rf5_ifc();
cfg_ifc_unq1  tc_rf52rf6_ifc();
cfg_ifc_unq1  tc_rf62rf7_ifc();
cfg_ifc_unq1  tc_rf72rf8_ifc();
cfg_ifc_unq1  tc_rf82rf9_ifc();
cfg_ifc_unq1  tc_rf92rf10_ifc();
cfg_ifc_unq1  tc_rf102rf11_ifc();
cfg_ifc_unq1  tc_rf112rf12_ifc();
cfg_ifc_unq1  tc_rf122rf13_ifc();
cfg_ifc_unq1  tc_rf132rf14_ifc();
cfg_ifc_unq1  tc_rf142rf15_ifc();
cfg_ifc_unq1  tc_rf152rf16_ifc();
cfg_ifc_unq1  tc_rf162rf17_ifc();
cfg_ifc_unq1  tc_rf172rf18_ifc();
cfg_ifc_unq1  tc_rf182rf19_ifc();
cfg_ifc_unq1  tc_rf192rf20_ifc();
cfg_ifc_unq1  tc_rf202rf21_ifc();
cfg_ifc_unq1  tc_rf212rf22_ifc();
cfg_ifc_unq1  tc_rf222rf23_ifc();
cfg_ifc_unq1  tc_rf232rf24_ifc();
cfg_ifc_unq1  tc_rf242rf25_ifc();
cfg_ifc_unq1  tc_rf262jtag_ifc();
cfg_ifc_unq1  tc_rf252rf26_ifc();


   // Reset to the test clock domain (this is different than the trst signal)
   logic 				test_logic_reset;




   // Instantiate the JTAG to reg-files controller
   cfg_and_dbg_unq1  cfg_and_dbg
     (
      // JTAG signals
      .tms(ifc.tms),
      .tck(ifc.tck),
      .trst_n(ifc.trst_n),
      .tdi(ifc.tdi),
      .tdo(ifc.tdo),
      .tdo_en(ifc.tdo_en),

      // BSR interface
      .bsr_extest(bsr_extest),
      .bsr_intest(bsr_intest),
      .bsr_sample(bsr_sample),
      .bsr_capture_en(bsr_capture_en),
      .bsr_shift_dr(bsr_shift_dr),
      .bsr_update_en(bsr_update_en),
      .bsr_tdo(bsr_tdo),
      .bsr_tdi(bsr_tdi),

      // signals to the system clocked regfile
			.sc_cfgReq(sc_jtag2rf0_ifc.cfgOut),
			.sc_cfgRep(sc_rf162jtag_ifc.cfgIn),

      .Clk(ifc.Clk),
      .Reset(ifc.Reset),

      // signals to the jtag clocked regfile
			.tc_cfgReq(tc_jtag2rf0_ifc.cfgOut),
			.tc_cfgRep(tc_rf262jtag_ifc.cfgIn),

      .test_logic_reset(test_logic_reset)
      );


   // Instantiate a couple of SYSTEM CLOCK domain reg-files and concatenate them
   // Note that signals A and B are IO's to the system. We'll also define signal C here:
//sc Domain: Register Bank 0:
reg_file_unq1  regfile0_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_jtag2rf0_ifc.cfgIn),
			.cfgOut(sc_rf02rf1_ifc.cfgOut),
			.cal_out_pi_d(ifc.cal_out_pi),
			.addr_d(ifc.addr)
			);
//sc Domain: Register Bank 1:
reg_file_unq2  regfile1_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf02rf1_ifc.cfgIn),
			.cfgOut(sc_rf12rf2_ifc.cfgOut),
			.pm_out_0_d(ifc.pm_out[0]),
			.pm_out_1_d(ifc.pm_out[1]),
			.pm_out_2_d(ifc.pm_out[2]),
			.pm_out_3_d(ifc.pm_out[3]),
			.pm_out_4_d(ifc.pm_out[4]),
			.pm_out_5_d(ifc.pm_out[5]),
			.pm_out_6_d(ifc.pm_out[6]),
			.pm_out_7_d(ifc.pm_out[7]),
			.pm_out_8_d(ifc.pm_out[8]),
			.pm_out_9_d(ifc.pm_out[9]),
			.pm_out_10_d(ifc.pm_out[10]),
			.pm_out_11_d(ifc.pm_out[11]),
			.pm_out_12_d(ifc.pm_out[12]),
			.pm_out_13_d(ifc.pm_out[13]),
			.pm_out_14_d(ifc.pm_out[14]),
			.pm_out_15_d(ifc.pm_out[15])
			);
//sc Domain: Register Bank 2:
reg_file_unq3  regfile2_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf12rf2_ifc.cfgIn),
			.cfgOut(sc_rf22rf3_ifc.cfgOut),
			.pm_out_pi_0_d(ifc.pm_out_pi[0]),
			.pm_out_pi_1_d(ifc.pm_out_pi[1]),
			.pm_out_pi_2_d(ifc.pm_out_pi[2]),
			.pm_out_pi_3_d(ifc.pm_out_pi[3])
			);
//sc Domain: Register Bank 3:
reg_file_unq4  regfile3_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf22rf3_ifc.cfgIn),
			.cfgOut(sc_rf32rf4_ifc.cfgOut),
			.Qperi_0_d(ifc.Qperi[0]),
			.Qperi_1_d(ifc.Qperi[1]),
			.Qperi_2_d(ifc.Qperi[2]),
			.Qperi_3_d(ifc.Qperi[3])
			);
//sc Domain: Register Bank 4:
reg_file_unq5  regfile4_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf32rf4_ifc.cfgIn),
			.cfgOut(sc_rf42rf5_ifc.cfgOut),
			.max_sel_mux_0_d(ifc.max_sel_mux[0]),
			.max_sel_mux_1_d(ifc.max_sel_mux[1]),
			.max_sel_mux_2_d(ifc.max_sel_mux[2]),
			.max_sel_mux_3_d(ifc.max_sel_mux[3])
			);
//sc Domain: Register Bank 5:
reg_file_unq6  regfile5_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf42rf5_ifc.cfgIn),
			.cfgOut(sc_rf52rf6_ifc.cfgOut),
			.pm_out_rep_0_d(ifc.pm_out_rep[0]),
			.pm_out_rep_1_d(ifc.pm_out_rep[1])
			);
//sc Domain: Register Bank 6:
reg_file_unq7  regfile6_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf52rf6_ifc.cfgIn),
			.cfgOut(sc_rf62rf7_ifc.cfgOut),
			.adcout_avg_0_d(ifc.adcout_avg[0]),
			.adcout_avg_1_d(ifc.adcout_avg[1]),
			.adcout_avg_2_d(ifc.adcout_avg[2]),
			.adcout_avg_3_d(ifc.adcout_avg[3]),
			.adcout_avg_4_d(ifc.adcout_avg[4]),
			.adcout_avg_5_d(ifc.adcout_avg[5]),
			.adcout_avg_6_d(ifc.adcout_avg[6]),
			.adcout_avg_7_d(ifc.adcout_avg[7]),
			.adcout_avg_8_d(ifc.adcout_avg[8]),
			.adcout_avg_9_d(ifc.adcout_avg[9]),
			.adcout_avg_10_d(ifc.adcout_avg[10]),
			.adcout_avg_11_d(ifc.adcout_avg[11]),
			.adcout_avg_12_d(ifc.adcout_avg[12]),
			.adcout_avg_13_d(ifc.adcout_avg[13]),
			.adcout_avg_14_d(ifc.adcout_avg[14]),
			.adcout_avg_15_d(ifc.adcout_avg[15])
			);
//sc Domain: Register Bank 7:
reg_file_unq8  regfile7_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf62rf7_ifc.cfgIn),
			.cfgOut(sc_rf72rf8_ifc.cfgOut),
			.adcout_sum_0_d(ifc.adcout_sum[0]),
			.adcout_sum_1_d(ifc.adcout_sum[1]),
			.adcout_sum_2_d(ifc.adcout_sum[2]),
			.adcout_sum_3_d(ifc.adcout_sum[3]),
			.adcout_sum_4_d(ifc.adcout_sum[4]),
			.adcout_sum_5_d(ifc.adcout_sum[5]),
			.adcout_sum_6_d(ifc.adcout_sum[6]),
			.adcout_sum_7_d(ifc.adcout_sum[7]),
			.adcout_sum_8_d(ifc.adcout_sum[8]),
			.adcout_sum_9_d(ifc.adcout_sum[9]),
			.adcout_sum_10_d(ifc.adcout_sum[10]),
			.adcout_sum_11_d(ifc.adcout_sum[11]),
			.adcout_sum_12_d(ifc.adcout_sum[12]),
			.adcout_sum_13_d(ifc.adcout_sum[13]),
			.adcout_sum_14_d(ifc.adcout_sum[14]),
			.adcout_sum_15_d(ifc.adcout_sum[15])
			);
//sc Domain: Register Bank 8:
reg_file_unq9  regfile8_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf72rf8_ifc.cfgIn),
			.cfgOut(sc_rf82rf9_ifc.cfgOut),
			.adcout_hist_center_0_d(ifc.adcout_hist_center[0]),
			.adcout_hist_center_1_d(ifc.adcout_hist_center[1]),
			.adcout_hist_center_2_d(ifc.adcout_hist_center[2]),
			.adcout_hist_center_3_d(ifc.adcout_hist_center[3]),
			.adcout_hist_center_4_d(ifc.adcout_hist_center[4]),
			.adcout_hist_center_5_d(ifc.adcout_hist_center[5]),
			.adcout_hist_center_6_d(ifc.adcout_hist_center[6]),
			.adcout_hist_center_7_d(ifc.adcout_hist_center[7]),
			.adcout_hist_center_8_d(ifc.adcout_hist_center[8]),
			.adcout_hist_center_9_d(ifc.adcout_hist_center[9]),
			.adcout_hist_center_10_d(ifc.adcout_hist_center[10]),
			.adcout_hist_center_11_d(ifc.adcout_hist_center[11]),
			.adcout_hist_center_12_d(ifc.adcout_hist_center[12]),
			.adcout_hist_center_13_d(ifc.adcout_hist_center[13]),
			.adcout_hist_center_14_d(ifc.adcout_hist_center[14]),
			.adcout_hist_center_15_d(ifc.adcout_hist_center[15])
			);
//sc Domain: Register Bank 9:
reg_file_unq10  regfile9_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf82rf9_ifc.cfgIn),
			.cfgOut(sc_rf92rf10_ifc.cfgOut),
			.adcout_hist_side_0_d(ifc.adcout_hist_side[0]),
			.adcout_hist_side_1_d(ifc.adcout_hist_side[1]),
			.adcout_hist_side_2_d(ifc.adcout_hist_side[2]),
			.adcout_hist_side_3_d(ifc.adcout_hist_side[3]),
			.adcout_hist_side_4_d(ifc.adcout_hist_side[4]),
			.adcout_hist_side_5_d(ifc.adcout_hist_side[5]),
			.adcout_hist_side_6_d(ifc.adcout_hist_side[6]),
			.adcout_hist_side_7_d(ifc.adcout_hist_side[7]),
			.adcout_hist_side_8_d(ifc.adcout_hist_side[8]),
			.adcout_hist_side_9_d(ifc.adcout_hist_side[9]),
			.adcout_hist_side_10_d(ifc.adcout_hist_side[10]),
			.adcout_hist_side_11_d(ifc.adcout_hist_side[11]),
			.adcout_hist_side_12_d(ifc.adcout_hist_side[12]),
			.adcout_hist_side_13_d(ifc.adcout_hist_side[13]),
			.adcout_hist_side_14_d(ifc.adcout_hist_side[14]),
			.adcout_hist_side_15_d(ifc.adcout_hist_side[15])
			);
//sc Domain: Register Bank 10:
reg_file_unq11  regfile10_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf92rf10_ifc.cfgIn),
			.cfgOut(sc_rf102rf11_ifc.cfgOut),
			.pfd_offset_0_d(ifc.pfd_offset[0]),
			.pfd_offset_1_d(ifc.pfd_offset[1]),
			.pfd_offset_2_d(ifc.pfd_offset[2]),
			.pfd_offset_3_d(ifc.pfd_offset[3]),
			.pfd_offset_4_d(ifc.pfd_offset[4]),
			.pfd_offset_5_d(ifc.pfd_offset[5]),
			.pfd_offset_6_d(ifc.pfd_offset[6]),
			.pfd_offset_7_d(ifc.pfd_offset[7]),
			.pfd_offset_8_d(ifc.pfd_offset[8]),
			.pfd_offset_9_d(ifc.pfd_offset[9]),
			.pfd_offset_10_d(ifc.pfd_offset[10]),
			.pfd_offset_11_d(ifc.pfd_offset[11]),
			.pfd_offset_12_d(ifc.pfd_offset[12]),
			.pfd_offset_13_d(ifc.pfd_offset[13]),
			.pfd_offset_14_d(ifc.pfd_offset[14]),
			.pfd_offset_15_d(ifc.pfd_offset[15])
			);
//sc Domain: Register Bank 11:
reg_file_unq12  regfile11_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf102rf11_ifc.cfgIn),
			.cfgOut(sc_rf112rf12_ifc.cfgOut),
			.adcout_avg_rep_0_d(ifc.adcout_avg_rep[0]),
			.adcout_avg_rep_1_d(ifc.adcout_avg_rep[1])
			);
//sc Domain: Register Bank 12:
reg_file_unq13  regfile12_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf112rf12_ifc.cfgIn),
			.cfgOut(sc_rf122rf13_ifc.cfgOut),
			.adcout_sum_rep_0_d(ifc.adcout_sum_rep[0]),
			.adcout_sum_rep_1_d(ifc.adcout_sum_rep[1])
			);
//sc Domain: Register Bank 13:
reg_file_unq14  regfile13_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf122rf13_ifc.cfgIn),
			.cfgOut(sc_rf132rf14_ifc.cfgOut),
			.adcout_hist_center_rep_0_d(ifc.adcout_hist_center_rep[0]),
			.adcout_hist_center_rep_1_d(ifc.adcout_hist_center_rep[1])
			);
//sc Domain: Register Bank 14:
reg_file_unq15  regfile14_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf132rf14_ifc.cfgIn),
			.cfgOut(sc_rf142rf15_ifc.cfgOut),
			.adcout_hist_side_rep_0_d(ifc.adcout_hist_side_rep[0]),
			.adcout_hist_side_rep_1_d(ifc.adcout_hist_side_rep[1])
			);
//sc Domain: Register Bank 15:
reg_file_unq16  regfile15_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf142rf15_ifc.cfgIn),
			.cfgOut(sc_rf152rf16_ifc.cfgOut),
			.pfd_offset_rep_0_d(ifc.pfd_offset_rep[0]),
			.pfd_offset_rep_1_d(ifc.pfd_offset_rep[1])
			);
//sc Domain: Register Bank 16:
reg_file_unq17  regfile16_on_sysclk (
			.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(sc_rf152rf16_ifc.cfgIn),
			.cfgOut(sc_rf162jtag_ifc.cfgOut),
			.out_data_0_d(ifc.out_data[0]),
			.out_data_1_d(ifc.out_data[1]),
			.out_data_2_d(ifc.out_data[2]),
			.out_data_3_d(ifc.out_data[3]),
			.out_data_4_d(ifc.out_data[4]),
			.out_data_5_d(ifc.out_data[5]),
			.out_data_6_d(ifc.out_data[6]),
			.out_data_7_d(ifc.out_data[7]),
			.out_data_8_d(ifc.out_data[8]),
			.out_data_9_d(ifc.out_data[9]),
			.out_data_10_d(ifc.out_data[10]),
			.out_data_11_d(ifc.out_data[11]),
			.out_data_12_d(ifc.out_data[12]),
			.out_data_13_d(ifc.out_data[13]),
			.out_data_14_d(ifc.out_data[14]),
			.out_data_15_d(ifc.out_data[15]),
			.out_data_16_d(ifc.out_data[16]),
			.out_data_17_d(ifc.out_data[17])
			);


   // Instantiate a JTAG CLOCK domain reg-file
   // Note that signals D and E are IO's to the system. We'll also define signal F here.
   // for testing purposes well init this signal (non synthesizable!)
//tc Domain: Register Bank 0:
reg_file_unq18  regfile0_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_jtag2rf0_ifc.cfgIn),
			.cfgOut(tc_rf02rf1_ifc.cfgOut),
			.en_v2t_q(ifc.en_v2t),
			.en_slice_q(ifc.en_slice),
			.ALWS_ON_q(ifc.ALWS_ON),
			.sel_clk_TDC_q(ifc.sel_clk_TDC),
			.en_pm_q(ifc.en_pm),
			.en_v2t_clk_next_q(ifc.en_v2t_clk_next),
			.en_sw_test_q(ifc.en_sw_test),
			.en_gf_q(ifc.en_gf),
			.en_arb_pi_q(ifc.en_arb_pi),
			.en_delay_pi_q(ifc.en_delay_pi),
			.en_ext_Qperi_q(ifc.en_ext_Qperi),
			.en_pm_pi_q(ifc.en_pm_pi),
			.en_cal_pi_q(ifc.en_cal_pi),
			.disable_state_q(ifc.disable_state),
			.en_clk_sw_q(ifc.en_clk_sw),
			.en_meas_pi_q(ifc.en_meas_pi),
			.sel_meas_pi_q(ifc.sel_meas_pi),
			.en_slice_rep_q(ifc.en_slice_rep),
			.ALWS_ON_rep_q(ifc.ALWS_ON_rep),
			.sel_clk_TDC_rep_q(ifc.sel_clk_TDC_rep),
			.en_pm_rep_q(ifc.en_pm_rep),
			.en_v2t_clk_next_rep_q(ifc.en_v2t_clk_next_rep),
			.en_sw_test_rep_q(ifc.en_sw_test_rep),
			.sel_pfd_in_q(ifc.sel_pfd_in),
			.sel_pfd_in_meas_q(ifc.sel_pfd_in_meas),
			.en_pfd_inp_meas_q(ifc.en_pfd_inp_meas),
			.en_pfd_inn_meas_q(ifc.en_pfd_inn_meas),
			.sel_del_out_q(ifc.sel_del_out),
			.disable_ibuf_async_q(ifc.disable_ibuf_async),
			.disable_ibuf_aux_q(ifc.disable_ibuf_aux),
			.disable_ibuf_test0_q(ifc.disable_ibuf_test0),
			.disable_ibuf_test1_q(ifc.disable_ibuf_test1),
			.en_inbuf_q(ifc.en_inbuf),
			.sel_inbuf_in_q(ifc.sel_inbuf_in),
			.bypass_inbuf_div_q(ifc.bypass_inbuf_div),
			.inbuf_ndiv_q(ifc.inbuf_ndiv),
			.en_inbuf_meas_q(ifc.en_inbuf_meas),
			.en_biasgen_q(ifc.en_biasgen),
			.sel_del_out_pi_q(ifc.sel_del_out_pi),
			.en_del_out_pi_q(ifc.en_del_out_pi),
			.pd_offset_ext_q(ifc.pd_offset_ext),
			.i_val_q(ifc.i_val),
			.p_val_q(ifc.p_val),
			.en_ext_pi_ctl_cdr_q(ifc.en_ext_pi_ctl_cdr),
			.ext_pi_ctl_cdr_q(ifc.ext_pi_ctl_cdr),
			.en_ext_pfd_offset_q(ifc.en_ext_pfd_offset),
			.en_ext_pfd_offset_rep_q(ifc.en_ext_pfd_offset_rep),
			.en_ext_max_sel_mux_q(ifc.en_ext_max_sel_mux),
			.en_pfd_cal_q(ifc.en_pfd_cal),
			.en_pfd_cal_rep_q(ifc.en_pfd_cal_rep),
			.Navg_adc_q(ifc.Navg_adc),
			.Nbin_adc_q(ifc.Nbin_adc),
			.DZ_hist_adc_q(ifc.DZ_hist_adc),
			.Navg_adc_rep_q(ifc.Navg_adc_rep),
			.Nbin_adc_rep_q(ifc.Nbin_adc_rep),
			.DZ_hist_adc_rep_q(ifc.DZ_hist_adc_rep),
			.Ndiv_clk_avg_q(ifc.Ndiv_clk_avg),
			.Ndiv_clk_cdr_q(ifc.Ndiv_clk_cdr),
			.int_rstb_q(ifc.int_rstb),
			.sram_rstb_q(ifc.sram_rstb),
			.cdr_rstb_q(ifc.cdr_rstb),
			.sel_outbuff_q(ifc.sel_outbuff),
			.sel_trigbuff_q(ifc.sel_trigbuff),
			.en_outbuff_q(ifc.en_outbuff),
			.en_trigbuff_q(ifc.en_trigbuff),
			.Ndiv_outbuff_q(ifc.Ndiv_outbuff),
			.Ndiv_trigbuff_q(ifc.Ndiv_trigbuff),
			.bypass_out_q(ifc.bypass_out),
			.bypass_trig_q(ifc.bypass_trig),
			.in_addr_q(ifc.in_addr)
			);
//tc Domain: Register Bank 1:
reg_file_unq19  regfile1_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf02rf1_ifc.cfgIn),
			.cfgOut(tc_rf12rf2_ifc.cfgOut),
			.ctl_v2tn_0_q(ifc.ctl_v2tn[0]),
			.ctl_v2tn_1_q(ifc.ctl_v2tn[1]),
			.ctl_v2tn_2_q(ifc.ctl_v2tn[2]),
			.ctl_v2tn_3_q(ifc.ctl_v2tn[3]),
			.ctl_v2tn_4_q(ifc.ctl_v2tn[4]),
			.ctl_v2tn_5_q(ifc.ctl_v2tn[5]),
			.ctl_v2tn_6_q(ifc.ctl_v2tn[6]),
			.ctl_v2tn_7_q(ifc.ctl_v2tn[7]),
			.ctl_v2tn_8_q(ifc.ctl_v2tn[8]),
			.ctl_v2tn_9_q(ifc.ctl_v2tn[9]),
			.ctl_v2tn_10_q(ifc.ctl_v2tn[10]),
			.ctl_v2tn_11_q(ifc.ctl_v2tn[11]),
			.ctl_v2tn_12_q(ifc.ctl_v2tn[12]),
			.ctl_v2tn_13_q(ifc.ctl_v2tn[13]),
			.ctl_v2tn_14_q(ifc.ctl_v2tn[14]),
			.ctl_v2tn_15_q(ifc.ctl_v2tn[15])
			);
//tc Domain: Register Bank 2:
reg_file_unq20  regfile2_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf12rf2_ifc.cfgIn),
			.cfgOut(tc_rf22rf3_ifc.cfgOut),
			.ctl_v2tp_0_q(ifc.ctl_v2tp[0]),
			.ctl_v2tp_1_q(ifc.ctl_v2tp[1]),
			.ctl_v2tp_2_q(ifc.ctl_v2tp[2]),
			.ctl_v2tp_3_q(ifc.ctl_v2tp[3]),
			.ctl_v2tp_4_q(ifc.ctl_v2tp[4]),
			.ctl_v2tp_5_q(ifc.ctl_v2tp[5]),
			.ctl_v2tp_6_q(ifc.ctl_v2tp[6]),
			.ctl_v2tp_7_q(ifc.ctl_v2tp[7]),
			.ctl_v2tp_8_q(ifc.ctl_v2tp[8]),
			.ctl_v2tp_9_q(ifc.ctl_v2tp[9]),
			.ctl_v2tp_10_q(ifc.ctl_v2tp[10]),
			.ctl_v2tp_11_q(ifc.ctl_v2tp[11]),
			.ctl_v2tp_12_q(ifc.ctl_v2tp[12]),
			.ctl_v2tp_13_q(ifc.ctl_v2tp[13]),
			.ctl_v2tp_14_q(ifc.ctl_v2tp[14]),
			.ctl_v2tp_15_q(ifc.ctl_v2tp[15])
			);
//tc Domain: Register Bank 3:
reg_file_unq21  regfile3_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf22rf3_ifc.cfgIn),
			.cfgOut(tc_rf32rf4_ifc.cfgOut),
			.init_0_q(ifc.init[0]),
			.init_1_q(ifc.init[1]),
			.init_2_q(ifc.init[2]),
			.init_3_q(ifc.init[3]),
			.init_4_q(ifc.init[4]),
			.init_5_q(ifc.init[5]),
			.init_6_q(ifc.init[6]),
			.init_7_q(ifc.init[7]),
			.init_8_q(ifc.init[8]),
			.init_9_q(ifc.init[9]),
			.init_10_q(ifc.init[10]),
			.init_11_q(ifc.init[11]),
			.init_12_q(ifc.init[12]),
			.init_13_q(ifc.init[13]),
			.init_14_q(ifc.init[14]),
			.init_15_q(ifc.init[15])
			);
//tc Domain: Register Bank 4:
reg_file_unq22  regfile4_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf32rf4_ifc.cfgIn),
			.cfgOut(tc_rf42rf5_ifc.cfgOut),
			.sel_pm_sign_0_q(ifc.sel_pm_sign[0]),
			.sel_pm_sign_1_q(ifc.sel_pm_sign[1]),
			.sel_pm_sign_2_q(ifc.sel_pm_sign[2]),
			.sel_pm_sign_3_q(ifc.sel_pm_sign[3]),
			.sel_pm_sign_4_q(ifc.sel_pm_sign[4]),
			.sel_pm_sign_5_q(ifc.sel_pm_sign[5]),
			.sel_pm_sign_6_q(ifc.sel_pm_sign[6]),
			.sel_pm_sign_7_q(ifc.sel_pm_sign[7]),
			.sel_pm_sign_8_q(ifc.sel_pm_sign[8]),
			.sel_pm_sign_9_q(ifc.sel_pm_sign[9]),
			.sel_pm_sign_10_q(ifc.sel_pm_sign[10]),
			.sel_pm_sign_11_q(ifc.sel_pm_sign[11]),
			.sel_pm_sign_12_q(ifc.sel_pm_sign[12]),
			.sel_pm_sign_13_q(ifc.sel_pm_sign[13]),
			.sel_pm_sign_14_q(ifc.sel_pm_sign[14]),
			.sel_pm_sign_15_q(ifc.sel_pm_sign[15])
			);
//tc Domain: Register Bank 5:
reg_file_unq23  regfile5_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf42rf5_ifc.cfgIn),
			.cfgOut(tc_rf52rf6_ifc.cfgOut),
			.sel_pm_in_0_q(ifc.sel_pm_in[0]),
			.sel_pm_in_1_q(ifc.sel_pm_in[1]),
			.sel_pm_in_2_q(ifc.sel_pm_in[2]),
			.sel_pm_in_3_q(ifc.sel_pm_in[3]),
			.sel_pm_in_4_q(ifc.sel_pm_in[4]),
			.sel_pm_in_5_q(ifc.sel_pm_in[5]),
			.sel_pm_in_6_q(ifc.sel_pm_in[6]),
			.sel_pm_in_7_q(ifc.sel_pm_in[7]),
			.sel_pm_in_8_q(ifc.sel_pm_in[8]),
			.sel_pm_in_9_q(ifc.sel_pm_in[9]),
			.sel_pm_in_10_q(ifc.sel_pm_in[10]),
			.sel_pm_in_11_q(ifc.sel_pm_in[11]),
			.sel_pm_in_12_q(ifc.sel_pm_in[12]),
			.sel_pm_in_13_q(ifc.sel_pm_in[13]),
			.sel_pm_in_14_q(ifc.sel_pm_in[14]),
			.sel_pm_in_15_q(ifc.sel_pm_in[15])
			);
//tc Domain: Register Bank 6:
reg_file_unq24  regfile6_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf52rf6_ifc.cfgIn),
			.cfgOut(tc_rf62rf7_ifc.cfgOut),
			.ctl_dcdl_late_0_q(ifc.ctl_dcdl_late[0]),
			.ctl_dcdl_late_1_q(ifc.ctl_dcdl_late[1]),
			.ctl_dcdl_late_2_q(ifc.ctl_dcdl_late[2]),
			.ctl_dcdl_late_3_q(ifc.ctl_dcdl_late[3]),
			.ctl_dcdl_late_4_q(ifc.ctl_dcdl_late[4]),
			.ctl_dcdl_late_5_q(ifc.ctl_dcdl_late[5]),
			.ctl_dcdl_late_6_q(ifc.ctl_dcdl_late[6]),
			.ctl_dcdl_late_7_q(ifc.ctl_dcdl_late[7]),
			.ctl_dcdl_late_8_q(ifc.ctl_dcdl_late[8]),
			.ctl_dcdl_late_9_q(ifc.ctl_dcdl_late[9]),
			.ctl_dcdl_late_10_q(ifc.ctl_dcdl_late[10]),
			.ctl_dcdl_late_11_q(ifc.ctl_dcdl_late[11]),
			.ctl_dcdl_late_12_q(ifc.ctl_dcdl_late[12]),
			.ctl_dcdl_late_13_q(ifc.ctl_dcdl_late[13]),
			.ctl_dcdl_late_14_q(ifc.ctl_dcdl_late[14]),
			.ctl_dcdl_late_15_q(ifc.ctl_dcdl_late[15])
			);
//tc Domain: Register Bank 7:
reg_file_unq25  regfile7_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf62rf7_ifc.cfgIn),
			.cfgOut(tc_rf72rf8_ifc.cfgOut),
			.ctl_dcdl_early_0_q(ifc.ctl_dcdl_early[0]),
			.ctl_dcdl_early_1_q(ifc.ctl_dcdl_early[1]),
			.ctl_dcdl_early_2_q(ifc.ctl_dcdl_early[2]),
			.ctl_dcdl_early_3_q(ifc.ctl_dcdl_early[3]),
			.ctl_dcdl_early_4_q(ifc.ctl_dcdl_early[4]),
			.ctl_dcdl_early_5_q(ifc.ctl_dcdl_early[5]),
			.ctl_dcdl_early_6_q(ifc.ctl_dcdl_early[6]),
			.ctl_dcdl_early_7_q(ifc.ctl_dcdl_early[7]),
			.ctl_dcdl_early_8_q(ifc.ctl_dcdl_early[8]),
			.ctl_dcdl_early_9_q(ifc.ctl_dcdl_early[9]),
			.ctl_dcdl_early_10_q(ifc.ctl_dcdl_early[10]),
			.ctl_dcdl_early_11_q(ifc.ctl_dcdl_early[11]),
			.ctl_dcdl_early_12_q(ifc.ctl_dcdl_early[12]),
			.ctl_dcdl_early_13_q(ifc.ctl_dcdl_early[13]),
			.ctl_dcdl_early_14_q(ifc.ctl_dcdl_early[14]),
			.ctl_dcdl_early_15_q(ifc.ctl_dcdl_early[15])
			);
//tc Domain: Register Bank 8:
reg_file_unq26  regfile8_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf72rf8_ifc.cfgIn),
			.cfgOut(tc_rf82rf9_ifc.cfgOut),
			.ctl_dcdl_TDC_0_q(ifc.ctl_dcdl_TDC[0]),
			.ctl_dcdl_TDC_1_q(ifc.ctl_dcdl_TDC[1]),
			.ctl_dcdl_TDC_2_q(ifc.ctl_dcdl_TDC[2]),
			.ctl_dcdl_TDC_3_q(ifc.ctl_dcdl_TDC[3]),
			.ctl_dcdl_TDC_4_q(ifc.ctl_dcdl_TDC[4]),
			.ctl_dcdl_TDC_5_q(ifc.ctl_dcdl_TDC[5]),
			.ctl_dcdl_TDC_6_q(ifc.ctl_dcdl_TDC[6]),
			.ctl_dcdl_TDC_7_q(ifc.ctl_dcdl_TDC[7]),
			.ctl_dcdl_TDC_8_q(ifc.ctl_dcdl_TDC[8]),
			.ctl_dcdl_TDC_9_q(ifc.ctl_dcdl_TDC[9]),
			.ctl_dcdl_TDC_10_q(ifc.ctl_dcdl_TDC[10]),
			.ctl_dcdl_TDC_11_q(ifc.ctl_dcdl_TDC[11]),
			.ctl_dcdl_TDC_12_q(ifc.ctl_dcdl_TDC[12]),
			.ctl_dcdl_TDC_13_q(ifc.ctl_dcdl_TDC[13]),
			.ctl_dcdl_TDC_14_q(ifc.ctl_dcdl_TDC[14]),
			.ctl_dcdl_TDC_15_q(ifc.ctl_dcdl_TDC[15])
			);
//tc Domain: Register Bank 9:
reg_file_unq27  regfile9_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf82rf9_ifc.cfgIn),
			.cfgOut(tc_rf92rf10_ifc.cfgOut),
			.ext_Qperi_0_q(ifc.ext_Qperi[0]),
			.ext_Qperi_1_q(ifc.ext_Qperi[1]),
			.ext_Qperi_2_q(ifc.ext_Qperi[2]),
			.ext_Qperi_3_q(ifc.ext_Qperi[3])
			);
//tc Domain: Register Bank 10:
reg_file_unq28  regfile10_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf92rf10_ifc.cfgIn),
			.cfgOut(tc_rf102rf11_ifc.cfgOut),
			.sel_pm_sign_pi_0_q(ifc.sel_pm_sign_pi[0]),
			.sel_pm_sign_pi_1_q(ifc.sel_pm_sign_pi[1]),
			.sel_pm_sign_pi_2_q(ifc.sel_pm_sign_pi[2]),
			.sel_pm_sign_pi_3_q(ifc.sel_pm_sign_pi[3])
			);
//tc Domain: Register Bank 11:
reg_file_unq29  regfile11_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf102rf11_ifc.cfgIn),
			.cfgOut(tc_rf112rf12_ifc.cfgOut),
			.del_inc_0_q(ifc.del_inc[0]),
			.del_inc_1_q(ifc.del_inc[1]),
			.del_inc_2_q(ifc.del_inc[2]),
			.del_inc_3_q(ifc.del_inc[3])
			);
//tc Domain: Register Bank 12:
reg_file_unq30  regfile12_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf112rf12_ifc.cfgIn),
			.cfgOut(tc_rf122rf13_ifc.cfgOut),
			.ctl_dcdl_slice_0_q(ifc.ctl_dcdl_slice[0]),
			.ctl_dcdl_slice_1_q(ifc.ctl_dcdl_slice[1]),
			.ctl_dcdl_slice_2_q(ifc.ctl_dcdl_slice[2]),
			.ctl_dcdl_slice_3_q(ifc.ctl_dcdl_slice[3])
			);
//tc Domain: Register Bank 13:
reg_file_unq31  regfile13_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf122rf13_ifc.cfgIn),
			.cfgOut(tc_rf132rf14_ifc.cfgOut),
			.ctl_dcdl_sw_0_q(ifc.ctl_dcdl_sw[0]),
			.ctl_dcdl_sw_1_q(ifc.ctl_dcdl_sw[1]),
			.ctl_dcdl_sw_2_q(ifc.ctl_dcdl_sw[2]),
			.ctl_dcdl_sw_3_q(ifc.ctl_dcdl_sw[3])
			);
//tc Domain: Register Bank 14:
reg_file_unq32  regfile14_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf132rf14_ifc.cfgIn),
			.cfgOut(tc_rf142rf15_ifc.cfgOut),
			.ctl_v2tn_rep_0_q(ifc.ctl_v2tn_rep[0]),
			.ctl_v2tn_rep_1_q(ifc.ctl_v2tn_rep[1])
			);
//tc Domain: Register Bank 15:
reg_file_unq33  regfile15_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf142rf15_ifc.cfgIn),
			.cfgOut(tc_rf152rf16_ifc.cfgOut),
			.ctl_v2tp_rep_0_q(ifc.ctl_v2tp_rep[0]),
			.ctl_v2tp_rep_1_q(ifc.ctl_v2tp_rep[1])
			);
//tc Domain: Register Bank 16:
reg_file_unq34  regfile16_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf152rf16_ifc.cfgIn),
			.cfgOut(tc_rf162rf17_ifc.cfgOut),
			.init_rep_0_q(ifc.init_rep[0]),
			.init_rep_1_q(ifc.init_rep[1])
			);
//tc Domain: Register Bank 17:
reg_file_unq35  regfile17_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf162rf17_ifc.cfgIn),
			.cfgOut(tc_rf172rf18_ifc.cfgOut),
			.sel_pm_sign_rep_0_q(ifc.sel_pm_sign_rep[0]),
			.sel_pm_sign_rep_1_q(ifc.sel_pm_sign_rep[1])
			);
//tc Domain: Register Bank 18:
reg_file_unq36  regfile18_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf172rf18_ifc.cfgIn),
			.cfgOut(tc_rf182rf19_ifc.cfgOut),
			.sel_pm_in_rep_0_q(ifc.sel_pm_in_rep[0]),
			.sel_pm_in_rep_1_q(ifc.sel_pm_in_rep[1])
			);
//tc Domain: Register Bank 19:
reg_file_unq37  regfile19_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf182rf19_ifc.cfgIn),
			.cfgOut(tc_rf192rf20_ifc.cfgOut),
			.ctl_dcdl_late_rep_0_q(ifc.ctl_dcdl_late_rep[0]),
			.ctl_dcdl_late_rep_1_q(ifc.ctl_dcdl_late_rep[1])
			);
//tc Domain: Register Bank 20:
reg_file_unq38  regfile20_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf192rf20_ifc.cfgIn),
			.cfgOut(tc_rf202rf21_ifc.cfgOut),
			.ctl_dcdl_early_rep_0_q(ifc.ctl_dcdl_early_rep[0]),
			.ctl_dcdl_early_rep_1_q(ifc.ctl_dcdl_early_rep[1])
			);
//tc Domain: Register Bank 21:
reg_file_unq39  regfile21_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf202rf21_ifc.cfgIn),
			.cfgOut(tc_rf212rf22_ifc.cfgOut),
			.ctl_dcdl_TDC_rep_0_q(ifc.ctl_dcdl_TDC_rep[0]),
			.ctl_dcdl_TDC_rep_1_q(ifc.ctl_dcdl_TDC_rep[1])
			);
//tc Domain: Register Bank 22:
reg_file_unq40  regfile22_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf212rf22_ifc.cfgIn),
			.cfgOut(tc_rf222rf23_ifc.cfgOut),
			.ctl_biasgen_0_q(ifc.ctl_biasgen[0]),
			.ctl_biasgen_1_q(ifc.ctl_biasgen[1]),
			.ctl_biasgen_2_q(ifc.ctl_biasgen[2]),
			.ctl_biasgen_3_q(ifc.ctl_biasgen[3])
			);
//tc Domain: Register Bank 23:
reg_file_unq41  regfile23_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf222rf23_ifc.cfgIn),
			.cfgOut(tc_rf232rf24_ifc.cfgOut),
			.ext_pi_ctl_offset_0_q(ifc.ext_pi_ctl_offset[0]),
			.ext_pi_ctl_offset_1_q(ifc.ext_pi_ctl_offset[1]),
			.ext_pi_ctl_offset_2_q(ifc.ext_pi_ctl_offset[2]),
			.ext_pi_ctl_offset_3_q(ifc.ext_pi_ctl_offset[3])
			);
//tc Domain: Register Bank 24:
reg_file_unq42  regfile24_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf232rf24_ifc.cfgIn),
			.cfgOut(tc_rf242rf25_ifc.cfgOut),
			.ext_pfd_offset_0_q(ifc.ext_pfd_offset[0]),
			.ext_pfd_offset_1_q(ifc.ext_pfd_offset[1]),
			.ext_pfd_offset_2_q(ifc.ext_pfd_offset[2]),
			.ext_pfd_offset_3_q(ifc.ext_pfd_offset[3]),
			.ext_pfd_offset_4_q(ifc.ext_pfd_offset[4]),
			.ext_pfd_offset_5_q(ifc.ext_pfd_offset[5]),
			.ext_pfd_offset_6_q(ifc.ext_pfd_offset[6]),
			.ext_pfd_offset_7_q(ifc.ext_pfd_offset[7]),
			.ext_pfd_offset_8_q(ifc.ext_pfd_offset[8]),
			.ext_pfd_offset_9_q(ifc.ext_pfd_offset[9]),
			.ext_pfd_offset_10_q(ifc.ext_pfd_offset[10]),
			.ext_pfd_offset_11_q(ifc.ext_pfd_offset[11]),
			.ext_pfd_offset_12_q(ifc.ext_pfd_offset[12]),
			.ext_pfd_offset_13_q(ifc.ext_pfd_offset[13]),
			.ext_pfd_offset_14_q(ifc.ext_pfd_offset[14]),
			.ext_pfd_offset_15_q(ifc.ext_pfd_offset[15])
			);
//tc Domain: Register Bank 25:
reg_file_unq43  regfile25_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf242rf25_ifc.cfgIn),
			.cfgOut(tc_rf252rf26_ifc.cfgOut),
			.ext_pfd_offset_rep_0_q(ifc.ext_pfd_offset_rep[0]),
			.ext_pfd_offset_rep_1_q(ifc.ext_pfd_offset_rep[1])
			);
//tc Domain: Register Bank 26:
reg_file_unq44  regfile26_on_tstclk (
			.Clk(ifc.tck),
			.Reset(test_logic_reset),
			.cfgIn(tc_rf252rf26_ifc.cfgIn),
			.cfgOut(tc_rf262jtag_ifc.cfgOut),
			.ext_max_sel_mux_0_q(ifc.ext_max_sel_mux[0]),
			.ext_max_sel_mux_1_q(ifc.ext_max_sel_mux[1]),
			.ext_max_sel_mux_2_q(ifc.ext_max_sel_mux[2]),
			.ext_max_sel_mux_3_q(ifc.ext_max_sel_mux[3])
			);




endmodule // raw_jtag

